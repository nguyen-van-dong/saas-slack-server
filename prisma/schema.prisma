generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workspace {
  id        String    @id @default(uuid())
  name      String
  slug      String    @unique
  users     WorkspaceUser[]
  channels  Channel[]
  createdAt DateTime  @default(now())
}

model User {
  id                 String   @id @default(uuid())
  email              String   @unique
  fullName           String
  password           String
  isActive           Boolean  @default(false)

  resetPasswordExpires    DateTime?
  resetPasswordToken String?  @unique

  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  workspaces         WorkspaceUser[]
  messages           Message[]
}

enum UserRole {
  ADMIN
  USER
  GUEST
}

enum InviteStatus {
  PENDING
  ACCEPTED
  DECLINED
}

model WorkspaceUser {
  id          Int    @id @default(autoincrement())
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  role        UserRole @default(USER)
  status      InviteStatus @default(PENDING)
  joinedAt    DateTime  @default(now())
}

model Channel {
  id          String    @id @default(uuid())
  name        String
  isPrivate   Boolean   @default(false)
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  messages    Message[]
  createdAt   DateTime @default(now())
}

model Message {
  id        Int   @id @default(autoincrement())
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  channel   Channel  @relation(fields: [channelId], references: [id])
  channelId String
  createdAt DateTime @default(now())
}
